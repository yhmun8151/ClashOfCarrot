//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.11.2
//     from Assets/Scripts/Input/Controls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

namespace DevelopersHub.ClashOfWhatever
{
    public partial class @Controls: IInputActionCollection2, IDisposable
    {
        public InputActionAsset asset { get; }
        public @Controls()
        {
            asset = InputActionAsset.FromJson(@"{
    ""name"": ""Controls"",
    ""maps"": [
        {
            ""name"": ""Main"",
            ""id"": ""67378634-6086-4143-852f-d97da7abca1a"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Button"",
                    ""id"": ""738184c0-5adc-4c32-b094-2d88d1d322fa"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MoveDelta"",
                    ""type"": ""Value"",
                    ""id"": ""97f9d578-50ec-4e2c-ba86-0b93e76eaa41"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""MouseScroll"",
                    ""type"": ""Value"",
                    ""id"": ""6120bc22-c394-4984-985d-264c90266d7e"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""MousePosition"",
                    ""type"": ""Value"",
                    ""id"": ""f65bf0d1-8930-40cf-bef0-9ba08cbbf517"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""TouchZoom"",
                    ""type"": ""Button"",
                    ""id"": ""15d6ad9a-6e7e-41d6-a6ed-5f0437401075"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TouchPosition0"",
                    ""type"": ""Value"",
                    ""id"": ""63fe1f8a-8427-441b-a020-6c163ffddef9"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""TouchPosition1"",
                    ""type"": ""Value"",
                    ""id"": ""a7077d57-516c-4365-9961-149618dda209"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""PointerPosition"",
                    ""type"": ""Value"",
                    ""id"": ""764773e8-caa6-4b00-b9f8-42b3407af66e"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""PointerClick"",
                    ""type"": ""Button"",
                    ""id"": ""9a5e4221-fa19-4283-9f87-ea426b2a8b4b"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": ""Tap"",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""f842d318-f196-4ab4-9811-5d2e47fe89e1"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""75cd8aab-d479-46ba-990a-7b29511091ac"",
                    ""path"": ""<Touchscreen>/primaryTouch/press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""85dfd63e-c952-4ea9-a3a8-fdee51d8a4b1"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveDelta"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a218d7d9-023d-484d-9548-07572c0c49ee"",
                    ""path"": ""<Touchscreen>/primaryTouch/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveDelta"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""90a8271b-1e82-442d-bc45-2d158ec7c5f3"",
                    ""path"": ""<Mouse>/scroll/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseScroll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8701be5d-9fcc-4a4f-a0d7-5704e4f4748a"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MousePosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""One Modifier"",
                    ""id"": ""c6fb338a-d91c-4074-bb87-331bb396f65e"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TouchZoom"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""c4f55c25-1bc5-4f85-8de0-689e2eaa4d51"",
                    ""path"": ""<Touchscreen>/touch0/press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TouchZoom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""030b75a1-3a65-435d-b488-c1b7957c2236"",
                    ""path"": ""<Touchscreen>/touch1/press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TouchZoom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""51c6dfac-49ed-4c18-a3b6-164defc366ff"",
                    ""path"": ""<Touchscreen>/touch0/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TouchPosition0"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6a5be568-cde0-4c61-a648-60c94483a386"",
                    ""path"": ""<Touchscreen>/touch1/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TouchPosition1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ce717d58-03d8-4d10-805e-fdc02ad5b50f"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PointerPosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a5649ddd-011f-48ce-8f5d-3a7bbd22d594"",
                    ""path"": ""<Touchscreen>/primaryTouch/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PointerPosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""07630520-ea65-4504-966d-2ad2e5798fe3"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PointerClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1e2d39e3-9988-453b-9b1e-c96a40a17fad"",
                    ""path"": ""<Touchscreen>/primaryTouch/tap"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PointerClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
            // Main
            m_Main = asset.FindActionMap("Main", throwIfNotFound: true);
            m_Main_Move = m_Main.FindAction("Move", throwIfNotFound: true);
            m_Main_MoveDelta = m_Main.FindAction("MoveDelta", throwIfNotFound: true);
            m_Main_MouseScroll = m_Main.FindAction("MouseScroll", throwIfNotFound: true);
            m_Main_MousePosition = m_Main.FindAction("MousePosition", throwIfNotFound: true);
            m_Main_TouchZoom = m_Main.FindAction("TouchZoom", throwIfNotFound: true);
            m_Main_TouchPosition0 = m_Main.FindAction("TouchPosition0", throwIfNotFound: true);
            m_Main_TouchPosition1 = m_Main.FindAction("TouchPosition1", throwIfNotFound: true);
            m_Main_PointerPosition = m_Main.FindAction("PointerPosition", throwIfNotFound: true);
            m_Main_PointerClick = m_Main.FindAction("PointerClick", throwIfNotFound: true);
        }

        ~@Controls()
        {
            UnityEngine.Debug.Assert(!m_Main.enabled, "This will cause a leak and performance issues, Controls.Main.Disable() has not been called.");
        }

        public void Dispose()
        {
            UnityEngine.Object.Destroy(asset);
        }

        public InputBinding? bindingMask
        {
            get => asset.bindingMask;
            set => asset.bindingMask = value;
        }

        public ReadOnlyArray<InputDevice>? devices
        {
            get => asset.devices;
            set => asset.devices = value;
        }

        public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

        public bool Contains(InputAction action)
        {
            return asset.Contains(action);
        }

        public IEnumerator<InputAction> GetEnumerator()
        {
            return asset.GetEnumerator();
        }

        IEnumerator IEnumerable.GetEnumerator()
        {
            return GetEnumerator();
        }

        public void Enable()
        {
            asset.Enable();
        }

        public void Disable()
        {
            asset.Disable();
        }

        public IEnumerable<InputBinding> bindings => asset.bindings;

        public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
        {
            return asset.FindAction(actionNameOrId, throwIfNotFound);
        }

        public int FindBinding(InputBinding bindingMask, out InputAction action)
        {
            return asset.FindBinding(bindingMask, out action);
        }

        // Main
        private readonly InputActionMap m_Main;
        private List<IMainActions> m_MainActionsCallbackInterfaces = new List<IMainActions>();
        private readonly InputAction m_Main_Move;
        private readonly InputAction m_Main_MoveDelta;
        private readonly InputAction m_Main_MouseScroll;
        private readonly InputAction m_Main_MousePosition;
        private readonly InputAction m_Main_TouchZoom;
        private readonly InputAction m_Main_TouchPosition0;
        private readonly InputAction m_Main_TouchPosition1;
        private readonly InputAction m_Main_PointerPosition;
        private readonly InputAction m_Main_PointerClick;
        public struct MainActions
        {
            private @Controls m_Wrapper;
            public MainActions(@Controls wrapper) { m_Wrapper = wrapper; }
            public InputAction @Move => m_Wrapper.m_Main_Move;
            public InputAction @MoveDelta => m_Wrapper.m_Main_MoveDelta;
            public InputAction @MouseScroll => m_Wrapper.m_Main_MouseScroll;
            public InputAction @MousePosition => m_Wrapper.m_Main_MousePosition;
            public InputAction @TouchZoom => m_Wrapper.m_Main_TouchZoom;
            public InputAction @TouchPosition0 => m_Wrapper.m_Main_TouchPosition0;
            public InputAction @TouchPosition1 => m_Wrapper.m_Main_TouchPosition1;
            public InputAction @PointerPosition => m_Wrapper.m_Main_PointerPosition;
            public InputAction @PointerClick => m_Wrapper.m_Main_PointerClick;
            public InputActionMap Get() { return m_Wrapper.m_Main; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(MainActions set) { return set.Get(); }
            public void AddCallbacks(IMainActions instance)
            {
                if (instance == null || m_Wrapper.m_MainActionsCallbackInterfaces.Contains(instance)) return;
                m_Wrapper.m_MainActionsCallbackInterfaces.Add(instance);
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @MoveDelta.started += instance.OnMoveDelta;
                @MoveDelta.performed += instance.OnMoveDelta;
                @MoveDelta.canceled += instance.OnMoveDelta;
                @MouseScroll.started += instance.OnMouseScroll;
                @MouseScroll.performed += instance.OnMouseScroll;
                @MouseScroll.canceled += instance.OnMouseScroll;
                @MousePosition.started += instance.OnMousePosition;
                @MousePosition.performed += instance.OnMousePosition;
                @MousePosition.canceled += instance.OnMousePosition;
                @TouchZoom.started += instance.OnTouchZoom;
                @TouchZoom.performed += instance.OnTouchZoom;
                @TouchZoom.canceled += instance.OnTouchZoom;
                @TouchPosition0.started += instance.OnTouchPosition0;
                @TouchPosition0.performed += instance.OnTouchPosition0;
                @TouchPosition0.canceled += instance.OnTouchPosition0;
                @TouchPosition1.started += instance.OnTouchPosition1;
                @TouchPosition1.performed += instance.OnTouchPosition1;
                @TouchPosition1.canceled += instance.OnTouchPosition1;
                @PointerPosition.started += instance.OnPointerPosition;
                @PointerPosition.performed += instance.OnPointerPosition;
                @PointerPosition.canceled += instance.OnPointerPosition;
                @PointerClick.started += instance.OnPointerClick;
                @PointerClick.performed += instance.OnPointerClick;
                @PointerClick.canceled += instance.OnPointerClick;
            }

            private void UnregisterCallbacks(IMainActions instance)
            {
                @Move.started -= instance.OnMove;
                @Move.performed -= instance.OnMove;
                @Move.canceled -= instance.OnMove;
                @MoveDelta.started -= instance.OnMoveDelta;
                @MoveDelta.performed -= instance.OnMoveDelta;
                @MoveDelta.canceled -= instance.OnMoveDelta;
                @MouseScroll.started -= instance.OnMouseScroll;
                @MouseScroll.performed -= instance.OnMouseScroll;
                @MouseScroll.canceled -= instance.OnMouseScroll;
                @MousePosition.started -= instance.OnMousePosition;
                @MousePosition.performed -= instance.OnMousePosition;
                @MousePosition.canceled -= instance.OnMousePosition;
                @TouchZoom.started -= instance.OnTouchZoom;
                @TouchZoom.performed -= instance.OnTouchZoom;
                @TouchZoom.canceled -= instance.OnTouchZoom;
                @TouchPosition0.started -= instance.OnTouchPosition0;
                @TouchPosition0.performed -= instance.OnTouchPosition0;
                @TouchPosition0.canceled -= instance.OnTouchPosition0;
                @TouchPosition1.started -= instance.OnTouchPosition1;
                @TouchPosition1.performed -= instance.OnTouchPosition1;
                @TouchPosition1.canceled -= instance.OnTouchPosition1;
                @PointerPosition.started -= instance.OnPointerPosition;
                @PointerPosition.performed -= instance.OnPointerPosition;
                @PointerPosition.canceled -= instance.OnPointerPosition;
                @PointerClick.started -= instance.OnPointerClick;
                @PointerClick.performed -= instance.OnPointerClick;
                @PointerClick.canceled -= instance.OnPointerClick;
            }

            public void RemoveCallbacks(IMainActions instance)
            {
                if (m_Wrapper.m_MainActionsCallbackInterfaces.Remove(instance))
                    UnregisterCallbacks(instance);
            }

            public void SetCallbacks(IMainActions instance)
            {
                foreach (var item in m_Wrapper.m_MainActionsCallbackInterfaces)
                    UnregisterCallbacks(item);
                m_Wrapper.m_MainActionsCallbackInterfaces.Clear();
                AddCallbacks(instance);
            }
        }
        public MainActions @Main => new MainActions(this);
        public interface IMainActions
        {
            void OnMove(InputAction.CallbackContext context);
            void OnMoveDelta(InputAction.CallbackContext context);
            void OnMouseScroll(InputAction.CallbackContext context);
            void OnMousePosition(InputAction.CallbackContext context);
            void OnTouchZoom(InputAction.CallbackContext context);
            void OnTouchPosition0(InputAction.CallbackContext context);
            void OnTouchPosition1(InputAction.CallbackContext context);
            void OnPointerPosition(InputAction.CallbackContext context);
            void OnPointerClick(InputAction.CallbackContext context);
        }
    }
}
